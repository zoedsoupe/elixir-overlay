name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.TOKEN }}
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      - uses: cachix/cachix-action@v15
        with:
          name: elixir-overlay
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipPush: ${{ github.event_name == 'pull_request' }}

      - name: Check flake
        run: nix flake check

      - name: Build latest Elixir
        run: nix build

      - name: Test overlay functionality
        run: |
          nix eval --raw '.#packages.x86_64-linux.latest.version'
          nix eval --impure --expr 'let pkgs = import <nixpkgs> { overlays = [ (import ./.) ]; }; in pkgs.elixir-bin."1.17.3".version'

  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir-version: ["latest", "1.18.4", "1.17.3", "1.16.3", "1.15.8"]
    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.TOKEN }}
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      - uses: cachix/cachix-action@v15
        with:
          name: elixir-overlay
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipPush: ${{ github.event_name == 'pull_request' }}

      - name: Build Elixir ${{ matrix.elixir-version }}
        run: |
          nix build --impure --expr 'let pkgs = import <nixpkgs> { overlays = [ (import ./.) ]; }; in pkgs.elixir-bin."${{ matrix.elixir-version }}"'
